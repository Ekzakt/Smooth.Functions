name: Build and Deploy to Azure Function App - func-app-smooth-stage

on:
  push:
    branches:
      - staging
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # Path to your project (default is the root)
  DOTNET_VERSION: '9.0.x' # .NET version to use

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # - name: 'Clone submodules in the correct location'
        # run: |
          # git clone https://github.com/Ekzakt/Ekzakt.FileChecker ../Ekzakt.FileChecker
          # git clone https://github.com/Ekzakt/Ekzakt.RemoteApiService ../Ekzakt.RemoteApiService

      - name: 'Set up .NET Environment'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: false

      - name: Debug File Structure
        run: ls -R
        
      # Step 3: Restore and Build
      # - name: 'Restore and Build Project'
        # run: |
          # dotnet restore
          # dotnet build --configuration Release --output ./output
          
      - name: Build the Solution
        run: dotnet build Smooth.Functions.sln --configuration Release
        
      # Step 4: Zip the Build Output
      - name: 'Create ZIP File for Deployment'
        run: |
          cd ./output
          zip -r ../functionapp.zip .
          cd ..

      # Step 5: Deploy to Azure Function App
      - name: 'Deploy to Azure Function App'
        uses: Azure/functions-action@v1
        with:
          app-name: 'func-app-smooth-stage' # Azure Function App name
          slot-name: 'Production' # Deployment slot (default is Production)
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D0CE675987B641DBBD8569436496A4D2 }}
          package: './functionapp.zip'
